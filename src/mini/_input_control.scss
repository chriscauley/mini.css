/* 
	Definitions for forms and input elements. 
*/
// Different elements are styled based on the same set of rules.
// Base form styling.
form {
	@if $form-back-color != $back-color {
		background: $form-back-color;
	}
	@if $form-fore-color != $fore-color {
		color: $form-fore-color;
	}
	@if $form-border-style != 0 {
		border: $form-border-style;
	}
	@if $form-border-radius != 0 {
		border-radius: $form-border-radius;
	}
	@if $form-margin != 0 {
		margin: $form-margin;
	}
	@if $form-padding != 0 {
		padding: $form-padding;
	}
	@if $form-box-shadow != none {
		box-shadow: $form-box-shadow;
	}
}
// Fieldset styling.
fieldset {
	@if $fieldset-back-color != $form-back-color {
		background: $fieldset-back-color;
	}
	// Apply always to overwrite defaults for all of the below.
	border: $fieldset-border-style;			
	border-radius: $fieldset-border-radius;
	margin: $fieldset-margin;
  	padding: $fieldset-padding;
}
// Legend styling.
legend {
	// IE and Edge fixes.
	box-sizing: border-box;
	display: table;
	max-width: 100%;
	white-space: normal;
	// Actual styling.
	font-weight: $legend-font-weight;
	font-size: $legend-font-size;
	@if $legend-fore-color != $fore-color {
		color: $legend-fore-color;
	}
	@if $legend-padding != 0 {
		padding: $legend-padding;
	}
}
// Input group base naming.
.#{$input-group-name} {
	display: inline-block;
}
// Correct the cursor style of increment and decrement buttons in Chrome.
[type="number"]::-webkit-inner-spin-button, [type="number"]::-webkit-outer-spin-button {
	height: auto; 
}
// Remove the default vertical scrollbar in IE.
textarea {
	overflow: auto;	
}
// Correct style in Chrome and Safari.
[type="search"] {
	-webkit-appearance: textfield; 
	outline-offset: -2px; 
}
// Correct style in Chrome and Safari.
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
	-webkit-appearance: none;
}
// Common textual input styling.
input:not([type]), [type="text"], [type="email"], [type="number"], [type="search"],
[type="password"], [type="url"], [type="tel"], textarea, select {
	box-sizing: border-box;
	// Background, color and border should not be unassigned, as the browser defaults will apply.
	background: $input-back-color;
	color: $input-fore-color;
	border: $input-border-style;
	@if $input-border-radius != 0 {
		border-radius: $input-border-radius;
	}		
	@if $input-margin != 0 {
		margin: $input-margin;
	}
	@if $input-padding != 0 {
		padding: $input-padding;
	}
	&:focus {
		border-color: $input-focus-border-color;
		box-shadow: none;
	}
	&[disabled] {
		cursor: not-allowed;
		opacity: $input-disabled-opacity;
	}
	&:invalid, &:focus:invalid, &:focus:invalid:focus{
		border-color: $input-invalid-border-color;
		box-shadow: none;
	}
	&[readonly]{
		background: $input-readonly-back-color;
		border-color: $input-readonly-border-color;
	}
}
// Placeholder styling.
::-webkit-input-placeholder {
	opacity: 1;
	color: $input-placeholder-fore-color;
}
::-moz-placeholder {
	opacity: 1;
	color: $input-placeholder-fore-color;
}
::-ms-placeholder {
	opacity: 1;
	color: $input-placeholder-fore-color;
}
// Definitions for the button and button-like elements.
// Different elements are styled based on the same set of rules.
// Reset for Firefox focusing on button elements.
button::-moz-focus-inner, [type="button"]::-moz-focus-inner, [type="reset"]::-moz-focus-inner, [type="submit"]::-moz-focus-inner {
	border-style: none;
	padding: 0;
}
// Fixes for Android 4, iOS and Safari.
button, html [type="button"], [type="reset"], [type="submit"] {
	-webkit-appearance: button;
}
// Other fixes.
button {
	overflow: visible;	// Show the overflow in IE.
	text-transform: none;	// Remove inheritance of text-transform in Edge, Firefox, and IE.
}
// Default styling
button, [type="button"], [type="submit"], [type="reset"], a.#{$button-class-name}, label.#{$button-class-name}, .#{$button-class-name} {
	display: inline-block;
	background: rgba($button-back-color, $button-back-opacity);
	color: $button-fore-color;
	border: $button-border-style;
	@if $button-border-radius != 0 {
		border-radius: $button-border-radius;
	}
	@if $button-padding != 0 {
		padding: $button-padding;
	}
	@if $button-margin != 0 {
		margin: $button-margin;
	}
	@if $button-box-shadow != none {
		box-shadow: $button-box-shadow;
	}
	@if $apply-link-underline {		// Override for links if underline is enabled.
		text-decoration: none;
	}
	-webkit-transition: all 0.3s ease 0s;
			transition: all 0.3s ease 0s;
	cursor: pointer;
	&:hover, &:active, &:focus {
		background: rgba($button-back-color, $button-hover-back-opacity);
		@if $apply-link-hover-fade {	// Override for links if hover-fade is enabled.
			opacity: 1;
		}
	}
	&:disabled, &[disabled] {
		cursor: not-allowed;
		opacity: $button-disabled-opacity;
	}
}
// Styling for file inputs
$hide-file-inputs: true !default;
@if $hide-file-inputs {
	input[type="file"] { // Hide, use labels instead. Hidden inputs like this are still accessible.
		border: 0;
		height: 1px;
		width: 1px;
		margin: -1px;
		overflow: hidden;
		padding: 0;
		position: absolute;	
		clip: rect(0 0 0 0);
		-webkit-clip-path: inset(100%);
				clip-path: inset(100%);	
	}
}
@else {
	::-webkit-file-upload-button {
		-webkit-appearance: button; 	// Correct inability to style in iOS and Safari.
		font: inherit; 					// Change font propery to `inherit` in Safari.
	}
}
// Button group definition
.#{$button-group-name} {
	// Old syntax
	display: -webkit-box;
	// New syntax
	display: -webkit-flex;
	display: 		 flex;
	border: $button-group-border-style;
	@if $button-border-radius != 0 {
		border-radius: $button-border-radius;
	}
	@if $button-group-margin != 0 {
		margin: $button-group-margin;
	}
	@if $button-group-box-shadow != none {
			box-shadow: $button-group-box-shadow;
		}
	button, [type="button"], [type="submit"], [type="reset"], a.#{$button-class-name}, label.#{$button-class-name}, .#{$button-class-name} {
		margin: 0;
		// Old syntax
		-webkit-box-flex: 1;
		max-width: 100%;
		// New syntax
		-webkit-flex-grow: 1;
				flex-grow: 1;
		-webkit-flex-basis: 0;
				flex-basis: 0;
		text-align: center;
		border: 0;
		@if $button-border-radius != 0 {
			border-radius: 0;
		}
		@if $button-group-border-style != 0 {
			+ button, + [type="button"], + [type="submit"], + [type="reset"], + a.#{$button-class-name}, + label.#{$button-class-name}, + .#{$button-class-name} {
				border-left: $button-group-border-style;
			}
		}
		@if $button-box-shadow != none {
			box-shadow: none;
		}
	}
}
// Responsiveness for button groups
@media (max-width: #{$button-group-mobile-breakpoint}) {
	.#{$button-group-name} {
		// Old syntax
		-webkit-box-orient: vertical;
		// New syntax
		-webkit-flex-direction: column;
				flex-direction: column;
		@if $button-group-border-style !=0 {
			button, [type="button"], [type="submit"], [type="reset"], a.#{$button-class-name}, label.#{$button-class-name}, .#{$button-class-name} {
				+ button, + [type="button"], + [type="submit"], + [type="reset"], + a.#{$button-class-name}, + label.#{$button-class-name}, + .#{$button-class-name} {
					border: 0;
					border-top: $button-group-border-style;
				}
			}
		}
	}
}
// Mixin for alternate buttons (button color variants).
// Variables:
// - $button-alt-name : The name of the class used for the alternate button.
// - $button-alt-back-color : The background color of the alternate button.
// - $button-alt-back-opacity : (Optional) Opacity of the background color of the alternate button. Defaults to 1.
// - $button-alt-hover-back-opacity : (Optional) Opacity of the background color of the alternate button on hover. Defaults to 1.
// - $button-alt-fore-color : (Optional) The text color of the alternate button. Defaults to the text color of the button.
// Notes:
// Due to something like `.button.secondary` being a higher specificity than `a.button` or `a`, no extra rules are
// required for such elements. However rules for the normal button elements are applied in order to not require the
// base class for the button styles.
@mixin make-button-alt-color ($button-alt-name, $button-alt-back-color, $button-alt-back-opacity: 1,
	$button-alt-hover-back-opacity: 1, $button-alt-fore-color: $button-fore-color) {
	button.#{$button-alt-name}, [type="button"].#{$button-alt-name}, [type="submit"].#{$button-alt-name}, 
	[type="reset"].#{$button-alt-name}, .#{$button-class-name}.#{$button-alt-name} {
		@if $button-alt-back-opacity !=1 {
			background: rgba($button-alt-back-color, $button-alt-back-opacity);
		}
		@if $button-alt-back-opacity == 1 {
			background: $button-alt-back-color;
		}
		@if $button-alt-fore-color != $button-fore-color {
			color: $button-alt-fore-color;
		}
		@if $button-alt-hover-back-opacity !=1 {
			&:hover, &:active, &:focus {
				background: rgba($button-alt-back-color, $button-alt-hover-back-opacity);
			}
		}
	}
}
// Mixin for alternate button styles (button style variants).
// Variables:
// - $button-alt-name : The name of the class used for the alternate button style.
// - $button-alt-border-style : The border style of the alternate button style.
// - $button-alt-border-radius : Border radius of the alternate button style.
// - $button-alt-padding : Padding of the alternate button style.
// - $button-alt-margin : Margin of the alternate button style.
// Notes:
// Due to something like `.button.small` being a higher specificity than `a.small` or `a`, no extra rules are
// required for such elements. However rules for the normal button elements are applied in order to not require the
// base class for the button styles.
@mixin make-button-alt-style ($button-alt-name, $button-alt-border-style, $button-alt-border-radius,
	$button-alt-padding, $button-alt-margin) {
	button.#{$button-alt-name}, [type="button"].#{$button-alt-name}, [type="submit"].#{$button-alt-name}, 
	[type="reset"].#{$button-alt-name}, .#{$button-class-name}.#{$button-alt-name} {
		@if $button-alt-border-style != $button-border-style {
			border: $button-alt-border-style;
		}
		@if $button-alt-border-radius != $button-border-radius {
			border-radius: $button-alt-border-radius;
		}
		@if $button-alt-padding != $button-padding {
			padding: $button-alt-padding;
		}
		@if $button-alt-margin != $button-margin {
			margin: $button-alt-margin;
		}
	}
}
// Definitions for checkboxes and radio button elements.
// Note: both elements are hidden by default and use labels to show their input state.
// Hide both input types - accessible (element is not visible, but screen readers read it normally).
[type="checkbox"], [type="radio"] {
	height: 1px;
	width: 1px;
	margin: -1px;
	overflow: hidden;
	position: absolute;
	clip: rect(0 0 0 0);
	-webkit-clip-path: inset(100%);
			clip-path: inset(100%);	
}
// Use input-group to setup the style for labels.
.#{$input-group-name} {
	// Label styling based on the specifics of the checkbox/radio variables.
	[type="checkbox"] + label, [type="radio"] + label {
		position: relative;
		margin-left: floor($checkbox-size + floor($checkbox-size * 0.25));
		// Styling for checkbox/radio box part.
		&:before {
			//box-sizing: border-box;	
			display: inline-block;
			position: absolute;
			bottom: $checkbox-bottom-spacing;
			left: 0;
			width: $checkbox-size;
			height: $checkbox-size;
			content: '';
			border: $checkbox-border-thickness solid $checkbox-border-color;
			@if $checkbox-border-radius != 0 {
				border-radius:  $checkbox-border-radius;
			}
			background: $checkbox-back-color;
			color: $checkbox-fore-color;
			margin-left: -($checkbox-size + ($checkbox-size * 0.25));
		}
		// Hover, focus, active styling.
		&:hover, &:active, &:focus {
			&:before {
				border-color: $checkbox-focus-border-color;
			}
		}	
	}
	[type="checkbox"]:focus + label:before, [type="radio"]:focus + label:before {
		border-color: $checkbox-focus-border-color;
	}
	// Make radio button box and fill circular.
	[type="radio"] + label {
		&:before, &:after {
			border-radius: 50%;
		}
	}
	// Disabled and readonly styles.
	[type="checkbox"][disabled] + label, [type="radio"][disabled] + label {
		cursor: not-allowed;
		&:before, &:after {
			opacity: $checkbox-disabled-opacity;
		}
	}
	// Fill for checked checkbox/radio elements.
	[type="checkbox"]:checked + label, [type="radio"]:checked + label{
		&:after {
			margin-left: - floor($checkbox-size + floor($checkbox-size * 0.25));
			position: absolute;
			bottom: floor($checkbox-size * 0.25) + $checkbox-bottom-spacing;
			left: floor($checkbox-size * 0.25);
			width: floor($checkbox-size * 0.5) + floor($checkbox-border-thickness * 2);
			height: floor($checkbox-size * 0.5) + floor($checkbox-border-thickness * 2);
			background: $checkbox-fore-color;
			content: '';
		}
	}
}